local OWNER = game.Players.LocalPlayer
local Mouse = OWNER:GetMouse()
local GuiName = "Seth | YBA"
local GuiKeybind = "v"
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGuiService = game:GetService("CoreGui")
local rs = game:GetService("RunService")
local TextService = game:GetService("TextService")

local Color_1 = Color3.fromRGB(160,160,160)
local Color_2 = Color3.fromRGB(155,155,155)
local Color_3 = Color3.fromRGB(120,120,120)
local Color_4 = Color3.fromRGB(90,90,90)
local Color_5 = Color3.fromRGB(180,180,180)

local RoundBoxes = 10
local TweenTime = .5
local Level = 1

local GlobalTweenInfo = TweenInfo.new(TweenTime)
local AlteredTweenInfo = TweenInfo.new(TweenTime, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)

local IconLibraryID = "rbxassetid://3926305904"
local IconLibraryID2 = "rbxassetid://3926307971"

local MainFont = Enum.Font.Gotham
local TARGET = ""
function gplr(String)
    local strl = String:lower()
    for i,v in pairs(game:FindService("Players"):GetPlayers()) do
        if v.Name:lower():sub(1, #String) == String:lower() or v.DisplayName:lower():sub(1, #String) == String:lower() then
            return v
        end
    end 
end
local function GetXY(GuiObject)
	local X, Y = Mouse.X - GuiObject.AbsolutePosition.X, Mouse.Y - GuiObject.AbsolutePosition.Y
	local MaxX, MaxY = GuiObject.AbsoluteSize.X, GuiObject.AbsoluteSize.Y
	X, Y = math.clamp(X, 0, MaxX), math.clamp(Y, 0, MaxY)
	return X, Y, X/MaxX, Y/MaxY
end

local function TitleIcon(ButtonOrNot)
	local NewTitleIcon = Instance.new(ButtonOrNot and "ImageButton" or "ImageLabel")
	NewTitleIcon.Name = "TitleIcon"
	NewTitleIcon.BackgroundTransparency = 1
	NewTitleIcon.Image = IconLibraryID
	NewTitleIcon.ImageRectOffset = Vector2.new(524, 764)
	NewTitleIcon.ImageRectSize = Vector2.new(36, 36)
	NewTitleIcon.Size = UDim2.new(0,14,0,14)
	NewTitleIcon.Position = UDim2.new(1,-17,0,3)
	NewTitleIcon.Rotation = 180
	NewTitleIcon.ZIndex = Level
	return NewTitleIcon
end

local function TickIcon(ButtonOrNot)
	local NewTickIcon = Instance.new(ButtonOrNot and "ImageButton" or "ImageLabel")
	NewTickIcon.Name = "TickIcon"
	NewTickIcon.BackgroundTransparency = 1
	NewTickIcon.Image = "rbxassetid://3926305904"
	NewTickIcon.ImageRectOffset = Vector2.new(312,4)
	NewTickIcon.ImageRectSize = Vector2.new(24,24)
	NewTickIcon.Size = UDim2.new(1,-6,1,-6)
	NewTickIcon.Position = UDim2.new(0,3,0,3)
	NewTickIcon.ZIndex = Level
	return NewTickIcon
end

local function DropdownIcon(ButtonOrNot)
	local NewDropdownIcon = Instance.new(ButtonOrNot and "ImageButton" or "ImageLabel")
	NewDropdownIcon.Name = "DropdownIcon"
	NewDropdownIcon.BackgroundTransparency = 1
	NewDropdownIcon.Image = IconLibraryID2
	NewDropdownIcon.ImageRectOffset = Vector2.new(324,364)
	NewDropdownIcon.ImageRectSize = Vector2.new(36,36)
	NewDropdownIcon.Size = UDim2.new(0,16,0,16)
	NewDropdownIcon.Position = UDim2.new(1,-18,0,2)
	NewDropdownIcon.ZIndex = Level
	return NewDropdownIcon
end

local function SearchIcon(ButtonOrNot)
	local NewSearchIcon = Instance.new(ButtonOrNot and "ImageButton" or "ImageLabel")
	NewSearchIcon.Name = "SearchIcon"
	NewSearchIcon.BackgroundTransparency = 1
	NewSearchIcon.Image = IconLibraryID
	NewSearchIcon.ImageRectOffset = Vector2.new(964,324)
	NewSearchIcon.ImageRectSize = Vector2.new(36,36)
	NewSearchIcon.Size = UDim2.new(0,16,0,16)
	NewSearchIcon.Position = UDim2.new(0,2,0,2)
	NewSearchIcon.ZIndex = Level
	return NewSearchIcon
end

local function ArrowIcon(Name)
	local NewArrowIcon = Instance.new("ImageLabel")
	NewArrowIcon.Name = Name
	NewArrowIcon.BackgroundTransparency = 1
	NewArrowIcon.Image = IconLibraryID
	NewArrowIcon.ImageRectOffset = Vector2.new(524, 764)
	NewArrowIcon.ImageRectSize = Vector2.new(36, 36)
	NewArrowIcon.Rotation = -90
	NewArrowIcon.Size = UDim2.new(0,14,0.2,14)
	NewArrowIcon.Position = UDim2.new(0,455,0,2)
	NewArrowIcon.ZIndex = Level
	return NewArrowIcon
end

local function RoundBox(CornerRadius, ButtonOrNot)
	local NewRoundBox = Instance.new(ButtonOrNot and "ImageButton" or "ImageLabel")
	NewRoundBox.BackgroundTransparency = 1
	NewRoundBox.Image = "rbxassetid://3570695787"
	NewRoundBox.SliceCenter = Rect.new(100,100,100,100)
	NewRoundBox.SliceScale = math.clamp((CornerRadius or 5) * 0.01, 0.01, 1)
	NewRoundBox.ScaleType = Enum.ScaleType.Slice
	NewRoundBox.ZIndex = Level
	return NewRoundBox
end

local function Frame()
	local NewFrame = Instance.new("Frame")
	NewFrame.BorderSizePixel = 0
	NewFrame.ZIndex = Level
	return NewFrame
end

local function ScrollingFrame()
	local NewScrollingFrame = Instance.new("ScrollingFrame")
	NewScrollingFrame.BackgroundTransparency = 1
	NewScrollingFrame.BorderSizePixel = 0
	NewScrollingFrame.ScrollBarThickness = 0
	NewScrollingFrame.ZIndex = Level
	return NewScrollingFrame
end

local function TextButton(Text, Size)
	local NewTextButton = Instance.new("TextButton")
	NewTextButton.Text = Text
	NewTextButton.AutoButtonColor = false
	NewTextButton.Font = MainFont
	NewTextButton.TextColor3 = Color3.fromRGB(255,255,255)
	NewTextButton.BackgroundTransparency = 1
	NewTextButton.TextSize = Size or 12
	NewTextButton.Size = UDim2.new(1,0,1,0)
	NewTextButton.ZIndex = Level
	return NewTextButton
end

local function TextBox(Text, Size)
	local NewTextBox = Instance.new("TextBox")
	NewTextBox.Text = Text
	NewTextBox.Font = MainFont
	NewTextBox.TextColor3 = Color3.fromRGB(1,1,1)
	NewTextBox.BackgroundTransparency = 1
	NewTextBox.TextSize = Size or 12
	NewTextBox.Size = UDim2.new(1,0,1,0)
	NewTextBox.ZIndex = Level
	return NewTextBox
end

local function TextLabel(Text, Size)
	local NewTextLabel = Instance.new("TextLabel")
	NewTextLabel.Text = Text
	NewTextLabel.Font = MainFont
	NewTextLabel.TextColor3 = Color3.fromRGB(255,255,255)
	NewTextLabel.BackgroundTransparency = 1
	NewTextLabel.TextSize = Size or 12
	NewTextLabel.Size = UDim2.new(1,0,1,0)
	NewTextLabel.ZIndex = Level
	return NewTextLabel
end

local function Tween(GuiObject, Dictionary)
	local TweenBase = TweenService:Create(GuiObject, GlobalTweenInfo, Dictionary)
	TweenBase:Play()
	return TweenBase
end

local function Tween1(GuiObject, Dictionary)
	local TweenBase = TweenService:Create(GuiObject, GlobalTweenInfo, Dictionary)
	TweenBase:Play()
    TweenBase.Completed:wait()
	return TweenBase
end

local UILibrary = {}

function UILibrary.Load(GUITitle)
	local TargetedParent = rs:IsStudio() and OWNER:WaitForChild("PlayerGui") or CoreGuiService
	
	local FindOldInstance = TargetedParent:FindFirstChild(GUITitle)
	
	if FindOldInstance then
		FindOldInstance:Destroy()
	end
	
	local NewInstance, ContainerFrame, MainFrame
	
	NewInstance = Instance.new("ScreenGui")
	NewInstance.Name = GUITitle
	NewInstance.Parent = TargetedParent
	
	ContainerFrame = Frame()
	ContainerFrame.Name = "ContainerFrame"
	ContainerFrame.Size = UDim2.new(0,700,0,300)
	ContainerFrame.Position = UDim2.new(0.5,-350,0.5,500)
	ContainerFrame.BackgroundTransparency = 1
	ContainerFrame.Parent = NewInstance
	Tween(ContainerFrame, {Position = UDim2.new(0.5,-350,0.5,-150)})

	Level += 1
	
	MainFrame = RoundBox(RoundBoxes)
	MainFrame.ClipsDescendants = true
	MainFrame.Name = "MainFrame"
	MainFrame.Size = UDim2.new(1,-50,1,-30)
	MainFrame.Position = UDim2.new(0,25,0,15)
	MainFrame.ImageColor3 = Color_3
	MainFrame.Parent = ContainerFrame

	local MenuBar, DisplayFrame, TitleBar
	
	MenuBar = ScrollingFrame()
	MenuBar.Name = "MenuBar"
	MenuBar.BackgroundTransparency = 1
	MenuBar.BackgroundColor3 = Color_4
	MenuBar.Size = UDim2.new(0,150,0,235)
	MenuBar.Position = UDim2.new(0,5,0,30)
	MenuBar.CanvasSize = UDim2.new(0,0,0,0)
	MenuBar.Parent = MainFrame
	
	DisplayFrame = RoundBox(RoundBoxes)
	DisplayFrame.Name = "Display"
	DisplayFrame.ImageColor3 = Color_4
	DisplayFrame.Size = UDim2.new(1,-165,0,235)
	DisplayFrame.Position = UDim2.new(0,160,0,30)
	DisplayFrame.Parent = MainFrame
	
	TitleBar = RoundBox(RoundBoxes)
	TitleBar.Name = "TitleBar"
	TitleBar.ImageColor3 = Color_5
	TitleBar.Size = UDim2.new(1,-10,0,20)
	TitleBar.Position = UDim2.new(0,5,0,5)
	TitleBar.Parent = MainFrame
	
	Level += 1
	
	local MinimiseButton, TitleButton
	local MinimiseToggle = true
	
	MinimiseButton = TitleIcon(true)
	MinimiseButton.Name = "Minimise"
	MinimiseButton.Parent = TitleBar
	
	TitleButton = TextButton(GUITitle, 14)
	TitleButton.Name = "TitleButton"
	TitleButton.Size = UDim2.new(1,-20,1,0)
	TitleButton.Parent = TitleBar
	
	local Closed = true
	if _G.GuiToggle then _G.GuiToggle:Disconnect() end
	_G.GuiToggle = Mouse.KeyDown:connect(function(key)
		if key == GuiKeybind then
			if Closed == true then
				Tween(game.CoreGui[GuiName].ContainerFrame.MainFrame, {Size = UDim2.new(1,-50,0,30)})
				Tween(game.CoreGui[GuiName].ContainerFrame.MainFrame.TitleBar.Minimise, {Rotation = 0})
				Tween1(game.CoreGui[GuiName].ContainerFrame, {Position = UDim2.new(0.5,-350,0.5,500)})
				game.CoreGui[GuiName].Enabled = false
				Closed = false
			else
				Closed = true
				game.CoreGui[GuiName].Enabled = true
				Tween(game.CoreGui[GuiName].ContainerFrame.MainFrame, {Size = UDim2.new(1,-50,1,-30)})
				Tween(game.CoreGui[GuiName].ContainerFrame.MainFrame.TitleBar.Minimise, {Rotation = 180})
				Tween1(game.CoreGui[GuiName].ContainerFrame, {Position = UDim2.new(0.5,-350,0.5,-150)})
			end
		end
	end)

	MinimiseButton.MouseButton1Down:Connect(function()
		MinimiseToggle = not MinimiseToggle
		if not MinimiseToggle then
			Tween(MainFrame, {Size = UDim2.new(1,-50,0,30)})
			Tween(MinimiseButton, {Rotation = 0})
		else
			Tween(MainFrame, {Size = UDim2.new(1,-50,1,-30)})
			Tween(MinimiseButton, {Rotation = 180})
		end
	end)
	
	TitleButton.MouseButton1Down:Connect(function()
		local LastMX, LastMY = Mouse.X, Mouse.Y
		local Move, Kill
		Move = Mouse.Move:Connect(function()
			local NewMX, NewMY = Mouse.X, Mouse.Y
			local DX, DY = NewMX - LastMX, NewMY - LastMY
			ContainerFrame.Position += UDim2.new(0,DX,0,DY)
			LastMX, LastMY = NewMX, NewMY
		end)
		Kill = UserInputService.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				Move:Disconnect()
				Kill:Disconnect()
			end
		end)
	end)
	
	Level += 1
	
	local MenuListLayout
	
	MenuListLayout = Instance.new("UIListLayout")
	MenuListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	MenuListLayout.Padding = UDim.new(0,5)
	MenuListLayout.Parent = MenuBar
	
	local TabCount = 0
	
	local TabLibrary = {}
	
	function TabLibrary.Page(PageTitle, SearchBarIncluded)
		local SearchBarIncluded = (SearchBarIncluded == nil) and true or SearchBarIncluded
		
		local PageContainer = RoundBox(RoundBoxes)
		PageContainer.Name = PageTitle
		PageContainer.Size = UDim2.new(1,0,0,20)
		PageContainer.LayoutOrder = TabCount
		PageContainer.ImageColor3 = (TabCount == 0) and Color_5 or Color_1
		PageContainer.Parent = MenuBar
		
		local PageButton = TextButton(PageTitle, 14)
		PageButton.Name = PageTitle.."Button"
		PageButton.TextTransparency = (TabCount == 0) and 0 or 0.5
		PageButton.Parent = PageContainer
		
		PageButton.MouseButton1Down:Connect(function()
			spawn(function()
				for _, Button in next, MenuBar:GetChildren() do
					if Button:IsA("GuiObject") then
                        game.CoreGui[GuiName].ContainerFrame.MainFrame.TitleBar.TitleButton.Text = GuiName.." : "..PageTitle
						local IsButton = string.find(Button.Name:lower(), PageContainer.Name:lower())
						local Button2 = Button:FindFirstChild(Button.Name.."Button")
						Tween(Button, {ImageColor3 = IsButton and Color_1 or Color_5})
						Tween(Button2, {TextTransparency = IsButton and 0 or 0.5})
					end
				end
			end)
			spawn(function()
				for _, Display in next, DisplayFrame:GetChildren() do
					if Display:IsA("GuiObject") then
						Display.Visible = string.find(Display.Name:lower(), PageContainer.Name:lower())
					end
				end
			end)
		end)
		
		local DisplayPage = ScrollingFrame()
		DisplayPage.Visible = (TabCount == 0)
		DisplayPage.Name = PageTitle
		DisplayPage.Size = UDim2.new(1,0,1,0)
		DisplayPage.Parent = DisplayFrame
		
		TabCount += 1
		
		local DisplayList = Instance.new("UIListLayout")
		DisplayList.SortOrder = Enum.SortOrder.LayoutOrder
		DisplayList.Padding = UDim.new(0,5)
		DisplayList.Parent = DisplayPage
		
		DisplayList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			local Y1 = DisplayList.AbsoluteContentSize.Y
			local Y2 = DisplayPage.AbsoluteWindowSize.Y
			DisplayPage.CanvasSize = UDim2.new(0,0,(Y1/Y2)+0.05,0)
		end)
		
		local DisplayPadding = Instance.new("UIPadding")
		DisplayPadding.PaddingBottom = UDim.new(0,5)
		DisplayPadding.PaddingTop = UDim.new(0,5)
		DisplayPadding.PaddingLeft = UDim.new(0,5)
		DisplayPadding.PaddingRight = UDim.new(0,5)
		DisplayPadding.Parent = DisplayPage
		
		if SearchBarIncluded then
			local SearchBarContainer = RoundBox(RoundBoxes)
			SearchBarContainer.Name = "SearchBar"
			SearchBarContainer.ImageColor3 = Color_1
			SearchBarContainer.Size = UDim2.new(1,0,0,20)
			SearchBarContainer.Parent = DisplayPage
			
			local SearchBox = TextBox("Search...")
			SearchBox.Name = "SearchInput"
			SearchBox.Position = UDim2.new(0,20,0,0)
			SearchBox.Size = UDim2.new(1,-20,1,0)
			SearchBox.TextTransparency = 0.5
			SearchBox.TextXAlignment = Enum.TextXAlignment.Left
			SearchBox.Parent = SearchBarContainer
			
			local SearchIcon = SearchIcon()
			SearchIcon.Parent = SearchBarContainer
			
			SearchBox:GetPropertyChangedSignal("Text"):Connect(function()
				local NewValue = SearchBox.Text
				for _, Element in next, DisplayPage:GetChildren() do
					if Element:IsA("Frame") then
						if string.find(Element.Name:lower(), NewValue:lower()) then
							Element.Visible = true
						else
							Element.Visible = false
						end
					end
				end
			end)
		end		
		local PageLibrary = {}
		
		function PageLibrary.Button(Text, Callback, Parent, Underline)
			local ButtonContainer = Frame()
			ButtonContainer.Name = Text.."BUTTON"
			ButtonContainer.Size = UDim2.new(1,0,0,20)
			ButtonContainer.BackgroundTransparency = 1
			ButtonContainer.Parent = Parent or DisplayPage
			
			local ButtonForeground = RoundBox(RoundBoxes)
			ButtonForeground.Name = "ButtonForeground"
			ButtonForeground.Size = UDim2.new(1,0,1,0)
			ButtonForeground.ImageColor3 = Color_1
			ButtonForeground.Parent = ButtonContainer
			
			local ButtonIcon = ArrowIcon("ButtonIcon")
			ButtonIcon.Parent = ButtonContainer
			ButtonIcon.Rotation = -90
			ButtonIcon.Position = UDim2.new(0,455,0,2)

			if Underline then
				local TextSize = TextService:GetTextSize(Text, 12, Enum.Font.Gotham, Vector2.new(0,0))
			
				local BottomEffect = Frame()
				BottomEffect.Size = UDim2.new(0,TextSize.X,0,1)
				BottomEffect.Position = UDim2.new(0.5,(-TextSize.X/2)-1,1,-1)
				BottomEffect.BackgroundColor3 = Color3.fromRGB(255,255,255)
				BottomEffect.BackgroundTransparency = 0.5
				BottomEffect.Parent = ButtonForeground
			end
			
			local HiddenButton = TextButton(Text, 12)
			HiddenButton.Parent = ButtonForeground
			
			HiddenButton.MouseButton1Down:Connect(function()
				Callback()
                spawn(function()
                    Tween(ButtonIcon, {Rotation = 90})
                    Tween1(ButtonIcon, {Position = UDim2.new(0,3,0,2)})
                    Tween(ButtonIcon, {Rotation = -90})
                    Tween(ButtonIcon, {Position = UDim2.new(0,455,0,2)})
                end)
				Tween(ButtonForeground, {ImageColor3 = Color_3})
				Tween(HiddenButton, {TextTransparency = 0.5})
				task.wait(.1)
				Tween(ButtonForeground, {ImageColor3 = Color_1})
				Tween(HiddenButton, {TextTransparency = 0})
			end)
		end
		
		function PageLibrary.Label(Text)
			local LabelContainer = Frame()
			LabelContainer.Name = Text.."LABEL"
			LabelContainer.Size = UDim2.new(1,0,0,20)
			LabelContainer.BackgroundTransparency = 1
			LabelContainer.Parent = DisplayPage
			
			local LabelForeground = RoundBox(RoundBoxes)
			LabelForeground.Name = "LabelForeground"
			LabelForeground.ImageColor3 = Color_1
			LabelForeground.Size = UDim2.new(1,0,1,0)
			LabelForeground.Parent = LabelContainer
			
			local HiddenLabel = TextLabel(Text, 12)
			HiddenLabel.Parent = LabelForeground
		end
		
		function PageLibrary.Dropdown(Text, ConfigurationArray, Callback)
			local DropdownArray = ConfigurationArray or {}
			
			local DropdownToggle = false
			
			local DropdownContainer = Frame()
			DropdownContainer.Size = UDim2.new(1,0,0,20)
			DropdownContainer.Name = Text.."DROPDOWN"
			DropdownContainer.BackgroundTransparency = 1
			DropdownContainer.Parent = DisplayPage
			
			local DropdownForeground = RoundBox(RoundBoxes)
			DropdownForeground.ClipsDescendants = true
			DropdownForeground.ImageColor3 = Color_1
			DropdownForeground.Size = UDim2.new(1,0,1,0)
			DropdownForeground.Parent = DropdownContainer
			
			local DropdownExpander = DropdownIcon(true)
			DropdownExpander.Parent = DropdownForeground
			
			local DropdownLabel = TextLabel(Text, 12)
			DropdownLabel.Size = UDim2.new(1,0,0,20)
			DropdownLabel.Parent = DropdownForeground
			
			local DropdownFrame = Frame()
			DropdownFrame.Position = UDim2.new(0,0,0,20)
			DropdownFrame.BackgroundTransparency = 1
			DropdownFrame.Size = UDim2.new(1,0,0,#DropdownArray*20)
			DropdownFrame.Parent = DropdownForeground
			
			local DropdownList = Instance.new("UIListLayout")
			DropdownList.Parent = DropdownFrame
			
			for OptionIndex, Option in next, DropdownArray do
				PageLibrary.Button(Option, function()
					Callback(Option)
					DropdownLabel.Text = Text..": "..Option
				end, DropdownFrame, OptionIndex < #DropdownArray)
			end
			
			DropdownExpander.MouseButton1Down:Connect(function()
				DropdownToggle = not DropdownToggle
				Tween(DropdownContainer, {Size = DropdownToggle and UDim2.new(1,0,0,20+(#DropdownArray*20)) or UDim2.new(1,0,0,20)})
				Tween(DropdownExpander, {Rotation = DropdownToggle and 135 or 0})
			end)
		end
		
		function PageLibrary.ColourPicker(Text, DefaultColour, Callback)
			local DefaultColour = DefaultColour or Color3.fromRGB(255,255,255)
			
			local ColourDictionary = {
				white = Color3.fromRGB(255,255,255),
				black = Color3.fromRGB(0,0,0),
				red = Color3.fromRGB(255,0,0),
				green = Color3.fromRGB(0,255,0),
				blue = Color3.fromRGB(0,0,255)
			}
			
			if typeof(DefaultColour) == "table" then
				DefaultColour = Color3.fromRGB(DefaultColour[1] or 255, DefaultColour[2] or 255, DefaultColour[3] or 255)
			elseif typeof(DefaultColour) == "string" then
				DefaultColour = ColourDictionary[DefaultColour:lower()] or ColourDictionary["white"]
			end
			
			local PickerContainer = Frame()
			PickerContainer.ClipsDescendants = true
			PickerContainer.Size = UDim2.new(1,0,0,20)
			PickerContainer.Name = Text.."COLOURPICKER"
			PickerContainer.BackgroundTransparency = 1
			PickerContainer.Parent = DisplayPage
			
			local ColourTracker = Instance.new("Color3Value")
			ColourTracker.Value = DefaultColour
			ColourTracker.Parent = PickerContainer
			
			local PickerLeftSide, PickerRightSide, PickerFrame = RoundBox(RoundBoxes), RoundBox(RoundBoxes), RoundBox(RoundBoxes)
			
			PickerLeftSide.Size = UDim2.new(1,-22,1,0)
			PickerLeftSide.ImageColor3 = Color_1
			PickerLeftSide.Parent = PickerContainer
			
			PickerRightSide.Size = UDim2.new(0,20,1,0)
			PickerRightSide.Position = UDim2.new(1,-20,0,0)
			PickerRightSide.ImageColor3 = DefaultColour
			PickerRightSide.Parent = PickerContainer
			
			PickerFrame.ImageColor3 = Color_1
			PickerFrame.Size = UDim2.new(1,-22,0,60)
			PickerFrame.Position = UDim2.new(0,0,0,20)
			PickerFrame.Parent = PickerContainer
			
			local PickerList = Instance.new("UIListLayout")
			PickerList.SortOrder = Enum.SortOrder.LayoutOrder
			PickerList.Parent = PickerFrame
			
			local RedPicker = PageLibrary.Slider("R", {Min = 0, Max = 255, Def = ColourTracker.Value.R * 255}, function(Value)
				ColourTracker.Value = Color3.fromRGB(Value, ColourTracker.Value.G * 255, ColourTracker.Value.B * 255)
				Callback(ColourTracker.Value)
			end, PickerFrame)
			
			local BluePicker = PageLibrary.Slider("G", {Min = 0, Max = 255, Def = ColourTracker.Value.G * 255}, function(Value)
				ColourTracker.Value = Color3.fromRGB(ColourTracker.Value.R * 255, Value, ColourTracker.Value.B * 255)
				Callback(ColourTracker.Value)
			end, PickerFrame)
			
			local GreenPicker = PageLibrary.Slider("B", {Min = 0, Max = 255, Def = ColourTracker.Value.B * 255}, function(Value)
				ColourTracker.Value = Color3.fromRGB(ColourTracker.Value.R * 255, ColourTracker.Value.G * 255, Value)
				Callback(ColourTracker.Value)
			end, PickerFrame)
			
			local EffectLeft, EffectRight = Frame(), Frame()
			
			EffectLeft.BackgroundColor3 = Color_1
			EffectLeft.Position = UDim2.new(1,-5,0,0)
			EffectLeft.Size = UDim2.new(0,5,1,0)
			EffectLeft.Parent = PickerLeftSide
			
			EffectRight.BackgroundColor3 = DefaultColour
			EffectRight.Size = UDim2.new(0,5,1,0)
			EffectRight.Parent = PickerRightSide
			
			local PickerLabel = TextLabel(Text, 12)
			PickerLabel.Size = UDim2.new(1,0,0,20)
			PickerLabel.Parent = PickerLeftSide
			
			ColourTracker:GetPropertyChangedSignal("Value"):Connect(function()
				local NewValue = ColourTracker.Value
				EffectRight.BackgroundColor3 = NewValue
				PickerRightSide.ImageColor3 = NewValue
			end)
			
			local PickerToggle = false
			
			local PickerButton = TextButton("")
			PickerButton.Parent = PickerRightSide
			
			PickerButton.MouseButton1Down:Connect(function()
				PickerToggle = not PickerToggle
				Tween(PickerContainer, {Size = PickerToggle and UDim2.new(1,0,0,80) or UDim2.new(1,0,0,20)})
			end)
		end
		
		function PageLibrary.Slider(Text, ConfigurationDictionary, Callback, Parent)
			local Configuration = ConfigurationDictionary
			local Minimum = Configuration.Minimum or Configuration.minimum or Configuration.Min or Configuration.min
			local Maximum = Configuration.Maximum or Configuration.maximum or Configuration.Max or Configuration.max
			local Default = Configuration.Default or Configuration.default or Configuration.Def or Configuration.def
			
			if Minimum > Maximum then
				local StoreValue = Minimum
				Minimum = Maximum
				Maximum = StoreValue
			end
			
			Default = math.clamp(Default, Minimum, Maximum)
			
			local DefaultScale = Default/Maximum
			
			local SliderContainer = Frame()
			SliderContainer.Name = Text.."SLIDER"
			SliderContainer.Size = UDim2.new(1,0,0,20)
			SliderContainer.BackgroundTransparency = 1
			SliderContainer.Parent = Parent or DisplayPage
			
			local SliderForeground = RoundBox(RoundBoxes)
			SliderForeground.Name = "SliderForeground"
			SliderForeground.ImageColor3 = Color_1
			SliderForeground.Size = UDim2.new(1,0,1,0)
			SliderForeground.Parent = SliderContainer
			
			local SliderIcon = ArrowIcon("SliderIcon")
            SliderIcon.Parent = SliderContainer
			SliderIcon.Position = UDim2.new(0,6,0,2)
			SliderIcon.Rotation = 90

			local SliderButton = TextButton(Text..": "..Default)
			SliderButton.Size = UDim2.new(1,0,1,0)
			SliderButton.ZIndex = 6
			SliderButton.Parent = SliderForeground
			
			local SliderFill = RoundBox(RoundBoxes)
			SliderFill.Size = UDim2.new(DefaultScale,0,1,0)
			SliderFill.ImageColor3 = Color_4
			SliderFill.ZIndex = 5
			SliderFill.ImageTransparency = 0.7
			SliderFill.Parent = SliderButton
			
			SliderButton.MouseButton1Down:Connect(function()
				Tween(SliderFill, {ImageTransparency = 0.5})
				local X, Y, XScale, YScale = GetXY(SliderButton)
				local Value = math.floor(Minimum + ((Maximum - Minimum) * XScale))
				Callback(Value)
				SliderButton.Text = Text..": "..tostring(Value)
				local TargetSize = UDim2.new(XScale,0,1,0)
				Tween(SliderFill, {Size = TargetSize})
				local SliderMove, SliderKill
				SliderMove = Mouse.Move:Connect(function()
					Tween(SliderFill, {ImageTransparency = 0.5})
					local X, Y, XScale, YScale = GetXY(SliderButton)
					local Value = math.floor(Minimum + ((Maximum - Minimum) * XScale))
					Callback(Value)
					Tween(SliderIcon, {Rotation = tonumber(Value)*50})
					SliderButton.Text = Text..": "..tostring(Value)
					local TargetSize = UDim2.new(XScale,0,1,0)
					Tween(SliderFill, {Size = TargetSize})
				end)
				SliderKill = UserInputService.InputEnded:Connect(function(UserInput)
					if UserInput.UserInputType == Enum.UserInputType.MouseButton1 then
						Tween(SliderFill, {ImageTransparency = 0.7})
						Tween(SliderIcon, {Rotation = 90})
						SliderMove:Disconnect()
						SliderKill:Disconnect()
					end
				end)
			end)
		end
		
		function PageLibrary.Toggle(Text, Callback)
			local ThisToggle = false
			
			local ToggleContainer = Frame()
			ToggleContainer.Name = Text.."TOGGLE"
			ToggleContainer.Size = UDim2.new(1,0,0,20)
			ToggleContainer.BackgroundTransparency = 1
			ToggleContainer.Parent = DisplayPage
			
			local ToggleLeftSide, ToggleRightSide, EffectFrame, RightTick = RoundBox(RoundBoxes), RoundBox(RoundBoxes), Frame(), TickIcon()
			local FlatLeft, FlatRight = Frame(), Frame()
			
			ToggleLeftSide.Size = UDim2.new(1,-22,1,0)
			ToggleLeftSide.ImageColor3 = Color_1
			ToggleLeftSide.Parent = ToggleContainer
			
			ToggleRightSide.Position = UDim2.new(1,-20,0,0)
			ToggleRightSide.Size = UDim2.new(0,20,1,0)
			ToggleRightSide.ImageColor3 = Color_1
			ToggleRightSide.Parent = ToggleContainer
			
			FlatLeft.BackgroundColor3 = Color_1
			FlatLeft.Size = UDim2.new(0,5,1,0)
			FlatLeft.Position = UDim2.new(1,-5,0,0)
			FlatLeft.Parent = ToggleLeftSide
			
			FlatRight.BackgroundColor3 = Color_1
			FlatRight.Size = UDim2.new(0,5,1,0)
			FlatRight.Parent = ToggleRightSide
			
			EffectFrame.BackgroundColor3 = ThisToggle and Color3.fromRGB(0,255,109) or Color3.fromRGB(255,160,160)
			EffectFrame.Position = UDim2.new(1,-22,0.2,0)
			EffectFrame.Size = UDim2.new(0,2,0.6,0)
			EffectFrame.Parent = ToggleContainer
			
			RightTick.ImageTransparency = ThisToggle and 0 or 1
			RightTick.Parent = ToggleRightSide
			
			local ToggleButton = TextButton("     "..Text, 12)
			ToggleButton.Name = "ToggleButton"
			ToggleButton.Size = UDim2.new(1,0,1,0)
			ToggleButton.Parent = ToggleLeftSide

			local ToggleIcons = ArrowIcon("ToggleIcon")
            ToggleIcons.Parent = EffectFrame
			ToggleIcons.Position = UDim2.new(0,-447,-.28,2)
			ToggleIcons.Rotation = 90
			
			ToggleButton.MouseButton1Down:Connect(function()
				ThisToggle = not ThisToggle
				Tween(EffectFrame, {BackgroundColor3 = ThisToggle and Color3.fromRGB(0,255,109) or Color3.fromRGB(255,160,160)})
                Tween(ToggleIcons, {Rotation = ThisToggle and -90 or 90})
                Tween(ToggleIcons, {Position = ThisToggle and UDim2.new(0,-20,-.28,2) or UDim2.new(0,-447,-.28,2)})
				Tween(RightTick, {ImageTransparency = ThisToggle and 0 or 1})
				Callback(ThisToggle)
			end)	

		end
		
		function PageLibrary.Textboxes(Text,Callback)
            local TextboxContainer = Frame()
			TextboxContainer.Name = Text.."LABEL"
			TextboxContainer.Size = UDim2.new(1,0,0,20)
			TextboxContainer.BackgroundTransparency = 1
			TextboxContainer.Parent = DisplayPage

            local TextboxForeground = RoundBox(RoundBoxes)
			TextboxForeground.Name = Text.."Label"
			TextboxForeground.ImageColor3 = Color_1
			TextboxForeground.Size = UDim2.new(1,0,0,20)
			TextboxForeground.Parent = TextboxContainer
            
            local SearchIcon = SearchIcon()
			SearchIcon.Parent = TextboxForeground
            SearchIcon.Position = UDim2.new(0,449,0,2)
            
			local Textbox = TextBox(Text)
			Textbox.Name = "Textboxes"
			Textbox.Position = UDim2.new(0,10,0,0)
			Textbox.Size = UDim2.new(1,-0,1,0)
			Textbox.TextTransparency = 0.5
			Textbox.TextXAlignment = Enum.TextXAlignment.Left
			Textbox.Parent = TextboxForeground
			
			Textbox.FocusLost:Connect(function()Callback(Textbox.Text)spawn(function()Tween1(SearchIcon, {Rotation = 360})SearchIcon.Rotation = 0 end)end)
        end

		return PageLibrary
	end
	
	return TabLibrary
end
